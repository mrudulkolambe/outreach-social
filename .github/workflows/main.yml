on:
  pull_request:
    branches:
    - dev
  push:
    branches:
    - dev
name: "Build & Release test"
jobs:
  convert-and-execute:
    name: Convert and Execute
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up cmd environment again
      shell: cmd
      run: "echo \"${{ secrets.KEYSTORE_JKS_BASE64 }}\" \n#magic___^_^___line\n"
    - name: Set up cmd environment
      shell: cmd
      run: |
        cd /d C:\path\to\your\upload-keystore
        echo %KEYSTORE_JKS_BASE64% | base64 --decode > upload-keystore.jks

    - name: Display converted file
      shell: cmd
      run: |
        dir  # List files to verify conversion (optional)
        type upload-keystore.jks  # Display contents to verify (optional)

    - name: Execute Your Code
      shell: cmd
      run: |
        # Replace this with your actual code execution commands
        echo "Executing remaining code..."
    # build:
#   name: Build & Release
#   runs-on: macos-latest
#   steps:
#   - name: Clone repository
#     run: |
#       echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
# - name: Clone repository
#   uses: actions/checkout@v4
# - name: Set up Java
#   uses: actions/setup-java@v4
#   with:
#     distribution: 'oracle'
#     java-version: '19'

# - name: Set up Flutter
#   uses: subosito/flutter-action@v2
#   with:
#     channel: stable
#     cache: true
#     cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
#     cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
#     pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:"
#     pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

# - name: Create key.properties file
#       run: |
#         mkdir -p android/app
#         echo "${{ secrets.KEY_PROPERTIES_CONTENT }}" > android/key.properties

# - name: Resolving Flutter Dependencies
#   run: flutter pub get

# - name: Build Android App
#   run: flutter build apk --release --split-per-abi

# - name: Build IOS App
#   run: |
#     flutter build ios --no-codesign
#     cd build/ios/iphoneos
#     mkdir Payload
#     ln -s ../Runner.app Payload/Runner.app
#     zip -r app.ipa Payload

# - name: Push to Releases
#   uses: ncipollo/release-action@v1
#   with:
#     artifacts: "build/app/outputs/apk/release/app-armeabi-v7a-release.apk,build/ios/iphoneos/app.ipa"
#     tag: v1.0.${{ github.run_number }}
#     token: ${{ secrets.TOKEN }}
